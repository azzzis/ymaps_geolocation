<?php

/**
 * @file
 * Defines Yandex maps formatter for the geolocation field.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_theme().
 */
function ymaps_geolocation_theme() {
  return [
    'ymaps_geolocation_formatter' => [
      'variables' => [
        'lng' => NULL,
        'lat' => NULL,
        'height' => '',
        'width' => '',
        'map_id' => '',
      ],
    ],
  ];
}

/**
 * Implements hook_library_info_build().
 *
 * @inheritdoc
 */
function ymaps_geolocation_library_info_build() {
  $config = \Drupal::config('ymaps_geolocation.settings');
  $api_key = $config->get('api_key');
  $libraries = [];
  $libraries['yandex_map_api'] = [
    'version' => '1.x',
    'header' => TRUE,
    'js' => [
      '//api-maps.yandex.ru/2.1/?api_key=' . $api_key . '&lang=ru_RU' => [
        'type' => 'external',
      ],
    ],
  ];
  return $libraries;
}

/**
 * Implements hook_help().
 *
 * @inheritdoc
 */
function ymaps_geolocation_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.ymaps_geolocation':
      $text = file_get_contents(dirname(__FILE__) . '/README.md');
      if (!\Drupal::moduleHandler()->moduleExists('markdown')) {
        return '<pre>' . $text . '</pre>';
      }
      else {
        // Use the Markdown filter to render the README.
        $filter_manager = \Drupal::service('plugin.manager.filter');
        $settings = \Drupal::configFactory()->get('markdown.settings')->getRawData();
        $config = ['settings' => $settings];
        $filter = $filter_manager->createInstance('markdown', $config);
        return $filter->process($text, 'en');
      }
  }
  return NULL;
}

/**
 * Return map types.
 */
function _ymaps_geolocation_get_map_types() {
  return [
    'yandex#map' => t('Roadmap'),
    'yandex#satellite' => t('Satelite'),
    'yandex#hybrid' => t('Hybrid'),
    'yandex#publicMap' => t('Public map'),
    'yandex#publicMapHybrid' => t('Hybrid public map'),
  ];
}
